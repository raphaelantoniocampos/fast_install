name: Build and Release

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - '!src/tests/**'
      - 'pyproject.toml'

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: windows-latest

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install uv toml bump2version
        uv venv
        .venv\Scripts\activate
        uv add pyproject.toml

    - name: Bump version and tag
      id: bump_version
      run: |
        $version = python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])"
        python -m pip install bump2version
        bump2version --current-version $version patch pyproject.toml
        $new_version = python -c "import toml; print(toml.load('pyproject.toml')['project']['version'])"
        echo "NEW_VERSION=$new_version" >> $env:GITHUB_OUTPUT
        git config --global user.name "GitHub Actions"
        git config --global user.email "actions@github.com"
        git add pyproject.toml
        git commit -m "Bump version to $new_version [skip ci]"
        git tag -a v$new_version -m "Version $new_version"

    - name: Push changes
      run: |
        git push origin tag v${{ steps.bump_version.outputs.NEW_VERSION }}
        git push origin main

    - name: Build executable
      run: |
        uv run main data/packages.json --build

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.bump_version.outputs.NEW_VERSION }}
        name: Release v${{ steps.bump_version.outputs.NEW_VERSION }}
        body: |
          Automated release for autopkg-windows v${{ steps.bump_version.outputs.NEW_VERSION }}
          
          Changes:
          - See commit history for details
        files: |
          dist/autopkg-windows.exe
        draft: false
        prerelease: false
